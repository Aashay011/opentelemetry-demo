name: OpenTelemetry Demo CI/CD

on:
  push:
    branches:
      - main

env:
  REGION: us-east-1
  CLUSTER_NAME: otel-demo
  NAMESPACE: otel-namespace

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.REGION }}

    # - name: Set up kubeconfig
    #   run: |
    #     aws eks update-kubeconfig --region $REGION --name $CLUSTER_NAME

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker images using Docker Compose
      run: |
        docker compose -f ./docker-compose.yml build

    - name: Tag and push all images to ECR
      run: |
        services=$(docker compose -f ./docker-compose.yml config --services)
        for service in $services; do
          IMAGE_NAME="${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}-$service:latest"
          docker tag "$service:latest" "$IMAGE_NAME"
          docker push "$IMAGE_NAME"
        done

    - name: (Optional) Scan image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: "${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest"
        
    - name: Deploy OpenTelemetry Demo
      run: |
        kubectl apply -f kubernetes/opentelemetry-demo.yaml -n $NAMESPACE --validate=false

  rollback:
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Rollback
        run: echo "Rollback triggered. Implement rollback logic here (e.g., use Helm or revert manifest)."
